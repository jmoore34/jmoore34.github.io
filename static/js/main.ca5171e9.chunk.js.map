{"version":3,"sources":["components/HelixDisplay.tsx","components/Typography.tsx","components/PanelContent.tsx","components/List.tsx","components/Project.tsx","content/projects.tsx","content/panels.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["angularWidth_rads","Math","PI","translateFromCenter_putInCalc","concat","tan","Container","styled","div","_templateObject","_taggedTemplateLiteral","Scene","_templateObject2","Helix","_templateObject3","props","currentIndex","Panel","_templateObject4","zIndex","index","gridLargeSquareSize","Grid","_templateObject5","HelixDisplay","_ref","children","setCurrentIndex","useState","panelCount","React","Children","toArray","length","fitWithinBounds","goRight","setTimeout","goLeft","createElement","Swipeable","onSwipedLeft","onSwipedRight","KeyboardEventHandler","handleKeys","onKeyEvent","map","content","abs","key","Heading","h1","Subheading","h2","bodyTextFormatting","Paragraph","p","color","showOnlyWhenVertical","Span","span","Link","a","attrs","target","rel","forceScrollbar","PanelContent","title","subtitle","ItemIcon","MdChevronRight","active","ItemHandle","clickable","ItemSubtitle","ItemBody","maxHeight","Item","_bodyRef$current","onClick","bodyRef","useRef","Fragment","ref","current","scrollHeight","List","_ref2","items","selected","setSelected","item","body","toggleSelection","Project","type","tools","overview","github","live","footnote","href","PortfolioProject","IRChatProject","FokusProject","TunerProject","ShareCalcProject","SDQRProject","DegreeAuditProject","RoleAssignerProject","CubeClockProject","style","ToborHerdingProject","DiceBotProject","CPUProject","StockMarketProject","StartPanel","AboutMePanel","EducationPanel","CourseworkPanel","LanguagesPanel","FrameworksPanel","MiscSkillsPanel","ProjectsPanel","WorkPanel","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca5171e9.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport React, {PropsWithChildren, useState} from 'react';\r\n// @ts-ignore\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\r\nimport {Swipeable} from \"react-swipeable\";\r\n\r\nconst panelWidth = \"50vw\";\r\nconst panelHeight = \"50vh\";\r\nconst panelsPerCycle = 8.3; // How many panels should fit in 360 degrees. Can be fractional/irrational\r\nconst panelsPerColorCycle = 8.7; // How many panels per 360 degrees of hue. Can be fractional/irrational\r\nconst angularWidth_rads = 2 * Math.PI / panelsPerCycle; // the total angular width of each panel, in radians\r\nconst translateFromCenter_putInCalc = `0.5 * ${panelWidth} / ${Math.tan(angularWidth_rads / 2)}`;\r\n// how much each panel should be translated from the y axis. NOTE: should be placed within a calc() expression\r\n\r\nconst perPanelVerticalOffset = \"25vh\";\r\n\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Scene = styled.div`\r\n  width: ${panelWidth};\r\n  height: ${panelHeight};\r\n  perspective: 1000px;\r\n`;\r\n\r\nconst Helix = styled.div<{ currentIndex: number }>`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  transform-style: preserve-3d;\r\n  transition: transform 1s;\r\n  transform: translateZ(calc( -1 * ${translateFromCenter_putInCalc}))\r\n             rotateY(${props => -1 * props.currentIndex * angularWidth_rads}rad)\r\n             translateY(calc(${perPanelVerticalOffset} * ${props => props.currentIndex}));\r\n         \r\n`;\r\n\r\nconst Panel = styled.div<{ index: number, zIndex: number }>`\r\n  position: absolute;\r\n  width: calc(${panelWidth} - 30px);\r\n  height: ${panelHeight};\r\n  max-height: 100%;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  z-index: ${props => props.zIndex};\r\n  \r\n  background-color: hsla(0deg,100%,100%,0.6);\r\n  border: 5px hsla(${props => props.index / panelsPerColorCycle}turn, 90%, 50%, 0.9) solid;\r\n  \r\n  transform: rotateY(${props => props.index * angularWidth_rads}rad)\r\n             translateZ(calc(${translateFromCenter_putInCalc}))\r\n             translateY(calc(-1 * ${perPanelVerticalOffset} * ${props => props.index}));\r\n`;\r\n\r\nconst gridSize = '2500px';\r\nconst gridSquareSize = '100px';\r\nconst gridLargeSquareSize = `calc(${gridSquareSize} * 5)`;\r\n\r\nconst Grid = styled.div`\r\n  position: absolute;\r\n  left: calc(-1 * ${gridSize});\r\n  right: calc(-1 * ${gridSize});\r\n  top: calc(-1 * ${gridSize});\r\n  bottom: calc(-1 * ${gridSize});\r\n  overflow: visible;\r\n\r\n  transform: rotateX(90deg)   // Tilt 90 degrees so that it's perpendicular to the panels\r\n             translateZ(calc( -1 * ${panelHeight} * 0.6)) // Push it down under the lowest panel\r\n             rotateZ(17deg);  // Rotate it a bit so that the grid lines don't line up with the first panel \r\n  \r\n  background-size: 100% 100%, // size for distance fading overlay\r\n                   ${gridSquareSize} ${gridSquareSize}, // Sizes for the horizonal & vertical thin lines\r\n                   ${gridSquareSize} ${gridSquareSize}, \r\n                   ${gridLargeSquareSize} ${gridLargeSquareSize}, // Sizes for the horizontal & vertical thick lines\r\n                   ${gridLargeSquareSize} ${gridLargeSquareSize};\r\n  background-image: radial-gradient(circle, transparent 0%, white 90%), // distance fade overlay\r\n                    linear-gradient(to right, #818181 1px, transparent 1px), // thin horizontal lines\r\n                    linear-gradient(to bottom, #818181 1px, transparent 1px), // thin vertical lines\r\n                    linear-gradient(to right, #585858 4px, transparent 1px), // thick horizontal lines\r\n                    linear-gradient(to bottom, #585858 4px, transparent 1px); // thick vertical lines\r\n`;\r\n\r\n\r\nexport const HelixDisplay = ({children}: PropsWithChildren<{}>) => {\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n    const childArray = React.Children.toArray(children);\r\n    const panelCount = childArray.length;\r\n\r\n    const fitWithinBounds = (index: number): number => {\r\n        if (index < 0)\r\n            return 0;\r\n        else if (index >= panelCount)\r\n            return panelCount - 1;\r\n        else return index;\r\n    };\r\n\r\n    const goRight = () => {\r\n        setTimeout(()=>setCurrentIndex(fitWithinBounds(currentIndex + 1)), 10);\r\n    };\r\n    const goLeft = () => {\r\n        setTimeout(()=>setCurrentIndex(fitWithinBounds(currentIndex - 1)), 10);\r\n    };\r\n\r\n\r\n    return <Swipeable onSwipedLeft={goRight} onSwipedRight={goLeft}>\r\n        <Container>\r\n            <KeyboardEventHandler handleKeys={['left', 'down']} onKeyEvent={goLeft}/>\r\n            <KeyboardEventHandler handleKeys={['right', 'up']} onKeyEvent={goRight}/>\r\n            <Scene>\r\n                <Helix currentIndex={currentIndex}>\r\n                    <Grid />\r\n                    {React.Children.toArray(children).map((content, index) => {\r\n                        const zIndex = panelCount - Math.abs(index - currentIndex); // Closer to current panel = higher z-index\r\n                        return <Panel index={index} key={index} zIndex={zIndex}>{content}</Panel>;\r\n                    })}\r\n                </Helix>\r\n            </Scene>\r\n        </Container>\r\n    </Swipeable>;\r\n};","import styled, {css} from 'styled-components';\r\n\r\nexport const fontFamily = \"monospace\";\r\n\r\nexport const Heading = styled.h1`\r\n  font-family: ${fontFamily};\r\n  color: #292929;\r\n`;\r\n\r\nexport const Subheading = styled.h2`\r\n  font-family: ${fontFamily};\r\n  color: #292929;\r\n  margin-top: 0;\r\n`;\r\n\r\nconst bodyTextFormatting = `\r\n  font-family: ${fontFamily};\r\n  color: #373737;\r\n  font-size: 18px;\r\n`;\r\n\r\ntype ParagraphProps = {\r\n    color?: string\r\n    showOnlyWhenVertical?: boolean\r\n}\r\n\r\nexport const Paragraph = styled.p<ParagraphProps>`\r\n  ${bodyTextFormatting}\r\n  ${props => props.color && \"color: \" + props.color}; // override color only if requested\r\n\r\n  // if requested to hide when vertical, use 'display: none' when horizontal\r\n  @media (orientation: landscape) {\r\n    ${props => props.showOnlyWhenVertical && \"display: none\"};\r\n  }\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  ${bodyTextFormatting}\r\n`;\r\n\r\nexport const Link = styled.a.attrs({\r\n    target: '_blank',\r\n    rel: 'noopener noreferrer'\r\n})`\r\n  text-decoration: none;\r\n  ${bodyTextFormatting};\r\n  color: green;\r\n`;","import styled from 'styled-components';\r\nimport React, {PropsWithChildren, useState} from 'react';\r\nimport {Heading, Subheading} from \"./Typography\";\r\n\r\n\r\ntype ContainerProps = {\r\n    forceScrollbar?: boolean\r\n}\r\nconst Container = styled.div<ContainerProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  padding: 10%;\r\n  min-height: ${props => props.forceScrollbar && \"70%\"}; // 70% is just enough (plus padding) to make the PanelContent slightly bigger than the Panel, forcing a scrollbar\r\n`;\r\n\r\ntype PanelProps = {\r\n    title: string\r\n    subtitle?: string\r\n    forceScrollbar?: boolean\r\n}\r\n\r\nexport const PanelContent = ({children, title, subtitle, forceScrollbar}: PropsWithChildren<PanelProps>) => {\r\n    return <Container forceScrollbar={forceScrollbar}>\r\n        <Heading>// {title}</Heading>\r\n        {subtitle && <Subheading>// {subtitle}</Subheading>}\r\n        {children}\r\n    </Container>;\r\n};","import styled from 'styled-components';\r\nimport {MdChevronRight} from 'react-icons/md'\r\nimport React, {PropsWithChildren, useRef, useState} from 'react';\r\nimport {Span} from \"./Typography\";\r\n\r\n\r\nconst ItemIcon = styled(MdChevronRight)<{ active?: boolean }>`\r\n  vertical-align: middle;\r\n  transition: transform 1s;\r\n  ${props => props.active && \"transform: rotateZ(90deg);\"}\r\n`;\r\n\r\nconst ItemHandle = styled(Span)<{ clickable?: boolean }>`\r\n  margin-left: 5px;\r\n  ${props => props.clickable && \"cursor: pointer; color: #008000\"};\r\n`;\r\n\r\nconst ItemSubtitle = styled(Span)`\r\n    color: #8cc148;\r\n`;\r\n\r\nconst ItemBody = styled.div<{ active?: boolean, maxHeight?: any }>`\r\n  transition: max-height 1s;\r\n  margin-left: 15px;  \r\n  overflow: hidden;\r\n  max-height: ${props => props.maxHeight};\r\n  //props => props.active ? \"max-height: 500px;\" : \"max-height: 0px;\"\r\n`;\r\n\r\ntype ItemProps = {\r\n    active?: boolean\r\n    title: string | JSX.Element\r\n    subtitle?: string\r\n    onClick?: () => void\r\n};\r\n\r\nconst Item = ({active, children, title, subtitle, onClick}: PropsWithChildren<ItemProps>) => {\r\n    const bodyRef = useRef<HTMLDivElement>(null);\r\n    return <>\r\n        <ItemHandle onClick={onClick} clickable={children != null}><ItemIcon active={active}/>{title} <ItemSubtitle>{subtitle}</ItemSubtitle></ItemHandle>\r\n        <ItemBody active={active} ref={bodyRef} maxHeight={active ? `${bodyRef.current?.scrollHeight}px` : \"0px\" } >{children}</ItemBody>\r\n    </>\r\n};\r\ntype ExpandableListItem = {\r\n    title: string | JSX.Element\r\n    subtitle?: string\r\n    body?: any\r\n}\r\ntype ListItem = string | JSX.Element | ExpandableListItem;\r\n\r\ntype ListProps = {\r\n    items: ListItem[]\r\n};\r\n\r\nexport const List: React.FC<ListProps> = ({items}) => {\r\n    const [selected, setSelected] = useState<number | null>(null);\r\n\r\n    const toggleSelection = (index: number) => {\r\n        if (selected === index)\r\n            setSelected(null); // if click on an open item, close it.\r\n        else\r\n            setSelected(index);\r\n    };\r\n    return <> {\r\n        items.map((item: ListItem, index: number) => {\r\n            if (typeof item === 'string') {\r\n                const title = item as string;\r\n                return <Item title={title}/>;\r\n            } else {\r\n                const {title, subtitle, body} = item as ExpandableListItem;\r\n                return <Item title={title} subtitle={subtitle} onClick={() => toggleSelection(index)} active={selected === index}>{body}</Item>\r\n            }\r\n    })}</>\r\n\r\n};","import styled from 'styled-components';\r\nimport React, {PropsWithChildren, ReactNode, useState} from 'react';\r\nimport {Link, Paragraph} from \"./Typography\";\r\n\r\ntype ProjectProps = {\r\n    type: string\r\n    tools: string\r\n    overview: ReactNode\r\n    github?: string\r\n    live?: string\r\n    footnote?: ReactNode\r\n}\r\n\r\nexport const Project: React.FC<ProjectProps> = ({type, tools, overview, github, live, footnote}) => <div>\r\n    <Paragraph><b>Type: </b>{type}</Paragraph>\r\n    <Paragraph><b>Tools: </b>{tools}</Paragraph>\r\n    <Paragraph><b>Overview: </b>{overview}</Paragraph>\r\n    {github && <Paragraph><Link href={github}>View on GitHub</Link></Paragraph>}\r\n    {live && <Paragraph><Link href={live}>View live demo</Link></Paragraph>}\r\n    <Paragraph>{footnote}</Paragraph>\r\n</div>;","import {Project} from \"../components/Project\";\r\nimport React, { Fragment } from 'react';\r\nimport {Link} from \"../components/Typography\";\r\n\r\nexport const PortfolioProject = () => <Project\r\n    type=\"Personal project\"\r\n    tools=\"3D CSS Transforms, React, styled-components\"\r\n    overview={<>\r\n        After seeing various <Link href=\"https://codepen.io/dogagenc/pen/xbRKZx\">CodePens</Link> and\r\n        <Link href=\"https://3dtransforms.desandro.com/cube\"> articles</Link> I was inspired to create my own 3D\r\n        landscape with React and CSS transforms.\r\n    </>}\r\n    github=\"https://github.com/jmoore34/jmoore34.github.io\"\r\n/>;\r\n\r\nexport const IRChatProject = () => <Project\r\n    type=\"Personal project\"\r\n    tools=\"Embedded C++, C#, WinForms\"\r\n    overview=\"Designed hardware and software to allow two offline computers to send and receive data simultaneously\r\n    via infrared beams. Used embedded C++ for the microcontroller and C# for the desktop client and GUI.\"\r\n    github=\"https://github.com/jmoore34/ir-chat\"\r\n/>;\r\n\r\nexport const FokusProject = () => <Project\r\n    type=\"Personal project\"\r\n    tools=\"React, Electron, pair programming\"\r\n    overview=\"Designed, wrote, and maintained a unique desktop productivity app. Addressed the problem of ineffective task management tools by creating a system that strictly enforced user-set time usage goals and prevented tampering or exiting.\"\r\n    github=\"https://github.com/jmoore34/fokus\"\r\n/>;\r\n\r\nexport const TunerProject = () => <Project\r\n    type=\"Personal project\"\r\n    tools=\"React, WebAudio API, Semantic UI\"\r\n    overview=\"Progressive Web App (PWA) that addressed the problem of inadequate tuner apps for musicians.\r\n    Unique features like playing multiple octaves concurrently.\"\r\n    github=\"https://github.com/jmoore34/tuner\"\r\n    live=\"https://jmoore34.github.io/tuner/\"\r\n/>;\r\n\r\n\r\nexport const ShareCalcProject = () => <Project\r\n    type=\"Class project\"\r\n    tools=\"Android/Java, JUnit 5, UML/Object-Oriented Design\"\r\n    overview=\"Formally planned scientific, unit, and programmer calculator app for Android with emphasis on sharing calculations with others. Formalized requirements, sequence diagrams, and class diagrams.  Handwrote a lexer and bottom-up parser, object-oriented evaluation engine, and 92 JUnit tests to allow for computation of arbitrarily complex scientific and bitwise expressions. Acted as team project manager, conducting code reviews, setting deadlines, and approving PRs.\"\r\n    github=\"https://github.com/MayaIsla/3354-Team-Moc\"\r\n/>;\r\n\r\nexport const SDQRProject = () => <Project\r\n    type=\"Personal project\"\r\n    tools=\"Kotlin, Unit Testing (kotest); C, C++, C#, Lisp, Python\"\r\n    overview=\"A Python program that outputs a C program that outputs a C++ program that outputs a C# program that outputs a Lisp program that outputs the exact original Python program. Each program in the cycle works independently and runs without any input, network, or disk reads. Moreover, each program in the cycle prints colored documentation about how to compile the next program in the cycle.\"\r\n    github=\"https://github.com/jmoore34/quine-relay\"\r\n    live=\"https://bit.ly/quinerelay\"\r\n/>;\r\n\r\nexport const RCVProject = () => <Project\r\n    type=\"Personal project\"\r\n    tools=\"Kotlin (ktor, Exposed), PostgreSQL, React, Typescript\"\r\n    overview=\"A full-stack Strawpoll-like voting application that implements Ranked Choice Voting. Custom-built REST API built with Ktor, PostgreSQL database, and React frontend. \"\r\n    github=\"\"\r\n/>\r\n\r\nexport const DegreeAuditProject = () => <Project\r\n    type=\"Senior design project\"\r\n    tools=\"React, Flask\"\r\n    overview=\"Full-stack React application reimagining how students plan and share their degree plans, greatly increasing advising efficiency. Students click on classes in a degree flowchart to assign color-coded semesters and then can export their degree plan as an image. Includes drag-and-drop SHA-256 password-authenticated flowchart editor for advisors using custom REST API.\"\r\n    github=\"https://github.com/jmoore34/degreeaudit\"\r\n/>\r\n\r\nexport const RoleAssignerProject = () => <Project\r\n    type=\"Personal project\"\r\n    tools=\"React, ktor (Kotlin HTTP server)\"\r\n    overview=\"Full-stack React application allowing for anonymized role assignment using custom WebSocket server. Features live, Google Docs-like collaboration, input debouncing, material design, and a custom API.\"\r\n    github=\"https://github.com/jmoore34/roleassigner\"\r\n    live=\"https://jmoore34.github.io/RoleAssigner/\"\r\n/>\r\n\r\nexport const CubeClockProject = () => <Project\r\n    type=\"Personal mini-project\"\r\n    tools=\"React, Typescript, SVG, styled-components\"\r\n    overview={\r\n        <Fragment>\r\n            Hue-shifted animated clock PWA featuring SVG cubes written from scratch.\r\n        </Fragment>\r\n    }\r\n    github=\"https://github.com/jmoore34/cubeclock\"\r\n    live=\"https://jmoore34.github.io/cubeclock/\"\r\n    footnote={\r\n        <Fragment>\r\n            <i style={{color: \"blue\"}}>Note: </i>\r\n            For a related mini-project of mine, see <Link href=\"https://jmoore34.github.io/binaryclock/\">Binary Clock</Link> <Link href=\"https://github.com/jmoore34/binaryclock\" >(Repo)</Link>\r\n        </Fragment>\r\n    }\r\n/>\r\n\r\nexport const ToborHerdingProject = () => <Project\r\n    type=\"Class project\"\r\n    tools=\"Unity\"\r\n    overview=\"3rd-person 3D game. Did most of the coding, including movement, camera rigging, AI behavior, game logic, and menus.\"\r\n    github=\"https://github.com/jmoore34/ToborHerding-Unity\"\r\n    live=\"https://jmoore34.github.io/ToborHerding-WebGL/\"\r\n/>\r\n\r\nexport const DiceBotProject = () => <Project\r\n    type=\"Personal project\"\r\n    tools=\"Rust, Discord Bot API\"\r\n    overview='A Rust-based Discord bot with a hand-written dice expression parser (e.g. parsing \"4d6r1k3*6\"). Configured GitHub Actions to automatically build and release Windows, Linux, and MacOS binaries.'\r\n    github=\"https://github.com/jmoore34/dicebot/\"\r\n/>\r\n\r\nexport const CPUProject = () => <Project\r\n    type=\"Class project\"\r\n    tools=\"LogicWorks schematic software\"\r\n    overview=\"A 4-bit CPU supporting addition, subtraction, comparison, XOR, AND, OR, and NOT instructions. Loading of instruction, operand 1, operand 2, and result registers is synchronized via a 3-bit timer which feeds into a decoder. \"\r\n    footnote={<Link href=\"cpu.png\">View Schematic</Link>}\r\n/>\r\n\r\nexport const StockMarketProject = () => <Project\r\n    type=\"Class project\"\r\n    tools=\"MySQL, Java\"\r\n    overview=\"Design documents (ER diagram, schema diagram) and SQL for a stock market database. The database was programmatically populated with data via a Java-based simulation.\"\r\n    github=\"https://github.com/jmoore34/stockmarket\"\r\n/>","import { PanelContent } from \"../components/PanelContent\";\r\nimport * as React from \"react\";\r\nimport { Link, Paragraph, Span } from \"../components/Typography\";\r\nimport { List } from \"../components/List\";\r\nimport {\r\n    CPUProject,\r\n    CubeClockProject,\r\n    DegreeAuditProject,\r\n    DiceBotProject,\r\n    FokusProject,\r\n    IRChatProject,\r\n    PortfolioProject, RCVProject, RoleAssignerProject, SDQRProject,\r\n    ShareCalcProject,\r\n    StockMarketProject,\r\n    ToborHerdingProject,\r\n    TunerProject\r\n} from \"./projects\";\r\n\r\nexport const StartPanel = () => <PanelContent title={\"Jonathan Moore\"} subtitle={\"Portfolio\"}>\r\n    <Paragraph showOnlyWhenVertical color=\"red\">\r\n        Note: To best experience this site, rotate your screen from portrait to landscape.\r\n    </Paragraph>\r\n    <Paragraph>\r\n        Use arrow keys or swipe gestures to navigate.\r\n    </Paragraph>\r\n</PanelContent>;\r\n\r\nexport const AboutMePanel = () => <PanelContent title={\"About me\"}>\r\n    <Paragraph>\r\n        I am a Software Engineer II at H-E-B and a Computer Science (<i>summa cum laude</i>) graduate from the University of Texas at Dallas.\r\n        I love functional programming, whether it be writing Haskell at my job, tinkering with Rust in my free time, or using FP-inspired frameworks like React and Solid in my website commissions. I also have a background in cybersecurity research, with a particular interest in binary and network exploitation.\r\n    </Paragraph>\r\n    <Paragraph>\r\n        In my free time, I love playing cello in a small ensemble, rock climbing, and hiking,\r\n    </Paragraph>\r\n    <Span>\r\n        <Link href=\"https://github.com/jmoore34\">GitHub</Link><span> - </span>\r\n        <Link href=\"https://www.linkedin.com/in/jonathan-t-moore/\">LinkedIn</Link>\r\n        {/* <span> - </span> */}\r\n        {/* <Link href=\"https://app.codesignal.com/profile/jonathan_moore\">CodeSignal</Link> */}\r\n    </Span>\r\n</PanelContent>;\r\n\r\nexport const EducationPanel = () => <PanelContent title=\"Education\" subtitle=\"Overview\">\r\n    {/* <List items={[\r\n        \"The Georgia Institute of Technology\",\r\n        \"M.S. Computer Science (in progress)\"\r\n    ]} />\r\n    <Paragraph /> */}\r\n    <List items={[\r\n        \"The University of Texas at Dallas\",\r\n        \"B.S. Computer Science, Awarded May 2021\",\r\n        \"Summa Cum Laude\",\r\n        \"GPA 3.972/4.0\"\r\n    ]} />\r\n</PanelContent>;\r\n\r\nexport const CourseworkPanel = () => <PanelContent title=\"Education\" subtitle=\"Coursework\">\r\n    <Paragraph>Graduate Coursework</Paragraph>\r\n    <List items={[\r\n        \"Information Security\",\r\n        \"Network Security\",\r\n        \"Human-Computer Interaction\"\r\n    ]} />\r\n    <Paragraph>Undergraduate Coursework</Paragraph>\r\n    <List items={[\r\n        \"Advanced Data Structures & Algorithms\",\r\n        \"Database Systems\",\r\n        \"Computer Networks\",\r\n        \"Automata Theory\",\r\n        \"Digital Logic\",\r\n        \"Software Engineering\",\r\n        \"Cyber Attack and Defense Lab\",\r\n        \"Operating System Design\",\r\n        \"Computer Architecture\",\r\n        \"C/C++ Programming in a Unix Environment\",\r\n        \"Organization of Programming Languages\",\r\n        \"Computer Graphics\",\r\n        \"Senior Design\",\r\n        \"Technical & Professional Communication\"\r\n    ]} />\r\n</PanelContent>;\r\n\r\nexport const LanguagesPanel = () => <PanelContent title=\"Skills\" subtitle=\"Languages\">\r\n    <List items={[\r\n        \"Haskell\",\r\n        \"SQL (PostgreSQL)\",\r\n        \"Rust\",\r\n        \"Kotlin\",\r\n        \"Typescript\",\r\n        \"C#\",\r\n        \"C++\",\r\n        \"C\",\r\n        \"Java\",\r\n        \"Python\",\r\n        // \"Lisp\",\r\n        // \"Bash\",\r\n    ]} />\r\n</PanelContent>;\r\n\r\nexport const FrameworksPanel = () => <PanelContent title=\"Skills\" subtitle=\"Framework Experience\">\r\n    <Paragraph>Backend</Paragraph>\r\n    <List items={[\r\n        \"Servant (Haskell) (as a SE I and SE II)\",\r\n        \"ktor (Kotlin HTTP server) (2 projects)\",\r\n        \"Axum (Rust HTTP server) (1 project)\",\r\n        \"Discord-rs (Rust Discord API crate) (1 project)\",\r\n        \"Flask (Python HTTP server) (1 project)\",\r\n    ]} />\r\n    <Paragraph>Frontend</Paragraph>\r\n    <List items={[\r\n        \"React/Preact (3 years / 8+ projects)\", // not including CobraFuel\r\n        \"styled-components/goober (3 years / 7 projects)\",\r\n        \"Material UI (2.5 years / 3 projects)\",\r\n        \"WPF (C#) (internship)\",\r\n        \"Sass (1 project)\",\r\n    ]} />\r\n\r\n    <Paragraph>Mobile</Paragraph>\r\n    <List items={[\r\n        \"Android (Java) (1 project)\",\r\n        \"React Native (1 toy project)\"\r\n    ]} />\r\n\r\n\r\n\r\n    <Paragraph>Other</Paragraph>\r\n    <List items={[\r\n        \"Unity (1 project)\"\r\n    ]} />\r\n</PanelContent>;\r\n\r\nexport const MiscSkillsPanel = () => <PanelContent title=\"Skills\" subtitle=\"Development Tools\">\r\n    <Paragraph>Software Development</Paragraph>\r\n    <List items={[\r\n        \"Git (command-line, SourceTree)\",\r\n        \"Jira\",\r\n        \"Unit testing (Jest, JUnit 5, kotest, Rus]t tests)\",\r\n        \"Docker\",\r\n        \"Linux, Bash, & Emacs\",\r\n        \"IntelliJ, WebStorm, Android Studio, VS Code, etc.\"\r\n    ]} />\r\n\r\n    <Paragraph>Cybersecurity Research</Paragraph>\r\n    <List items={[\r\n        \"Binary Analysis Platform (Primus symbolic microexecutor)\",\r\n        \"Custom Clang tool development (libtooling)\",\r\n        \"Ghidra\",\r\n        \"Cutter\",\r\n        \"GDB (pwndbg)\",\r\n        \"AddressSanitizer, UBSan, etc.\",\r\n    ]} />\r\n\r\n    <Paragraph>Document Editing</Paragraph>\r\n    <List items={[\r\n        \"LaTeX\",\r\n        \"MS Office\"\r\n    ]} />\r\n</PanelContent>;\r\n\r\n\r\nexport const ProjectsPanel = () => <PanelContent title=\"Projects\" forceScrollbar> {/*// force scrollbar appearance to prevent scrollbar-based jitter during animations*/}\r\n    <Paragraph>Here are some of my featured publicly-available projects. Click on an item to expand more details.</Paragraph>\r\n    <List items={[\r\n        { title: \"Dice Bot\", subtitle: \"(Rust)\", body: <DiceBotProject /> },\r\n        { title: \"Tobor Herding Game\", subtitle: \"(C#/Unity)\", body: <ToborHerdingProject /> },\r\n        { title: \"Cube Clock\", subtitle: \"(TypeScript/React)\", body: <CubeClockProject /> },\r\n        { title: \"Role Assigner\", subtitle: \"(TypeScript/React, Kotlin/Ktor)\", body: <RoleAssignerProject /> },\r\n        { title: \"Degree Audit Tool\", subtitle: \"(TypeScript/React, Python/Flask)\", body: <DegreeAuditProject /> },\r\n        { title: \"Self-Documenting Quine Relay\", subtitle: \"(Kotlin et al.)\", body: <SDQRProject /> },\r\n        { title: \"Stock Market Database\", subtitle: \"(MySQL, Java)\", body: <StockMarketProject /> },\r\n        { title: \"Portfolio Website\", subtitle: \"(TypeScript/React)\", body: <PortfolioProject /> },\r\n        { title: \"ShareCalc\", subtitle: \"(Java/Android)\", body: <ShareCalcProject /> },\r\n        { title: \"Fokus\", subtitle: \"(Electron, TypeScript/React)\", body: <FokusProject /> },\r\n        { title: \"Web Tuner\", subtitle: \"(TypeScript/React)\", body: <TunerProject /> },\r\n        { title: \"IR Chat\", subtitle: \"(C#/WinForms, Embedded C++)\", body: <IRChatProject /> },\r\n        { title: \"4-bit CPU\", subtitle: \"(Schematic)\", body: <CPUProject /> },\r\n    ]} />\r\n</PanelContent>;\r\n\r\nexport const WorkPanel = () => <PanelContent title=\"Work experience\">\r\n\r\n    <Paragraph>Workplace experience (click on an item to expand)</Paragraph>\r\n    <List items={[\r\n        {\r\n            title: \"Software Engineer II (November 2023 - Present)\", body: <>\r\n                <Paragraph>H-E-B, San Antonio, TX (Remote)</Paragraph>\r\n                <Paragraph>As a Haskell backend engineer, I rewrote one of our least performant queries to cut its completion time from over a day to under 8 minutes (a 12,000x performance increase). I also modified our message storage infrastructure to automatically clean up after itself, safely deleting over 100 million stale records in its pilot, to permanently boost the performance of historical queries.</Paragraph>\r\n            </>\r\n        },\r\n        {\r\n            title: \"Software Engineer II (November 2023 - Present)\", body: <>\r\n                <Paragraph>H-E-B, San Antonio, TX (Remote)</Paragraph>\r\n                <Paragraph>Pairing with a staff engineer, I created a major redesign to our database schema that would reduce data anomalies and allow for efficient point-in-time historical queries of data that was previously very expensive to query historically. I also improved the clarity of all our SQL queries by integrating a quasiquoter into our Haskell codebase. With an eye for detail, I caught sneaky yet important bugs in code review. Twice, I caught sneaky edge cases with our team's planned redesign, which I presented to the team with data analysis and pros and cons of multiple solutions.</Paragraph>\r\n            </>\r\n        },\r\n        {\r\n            title: \"Research Assistant (Spring 2020 - Winter 2020)\", body: <>\r\n                <Paragraph>The University of Texas at Dallas, Richardson, TX (Dr. Shiyi Wei's Lab)</Paragraph>\r\n                <Paragraph>\r\n                    Worked on a team of PhD students creating a framework to evaluate fuzz testers via artificial bug\r\n                    injection. I read papers, designed and ran experiments (e.g. with ASAN), developed key parts of the toolchain\r\n                    (such as a custom Clang compiler plugin to rewrite source code and a custom Primus Lisp plugin for\r\n                    the Binary Analysis Platform microexecutor), and help writed the paper we submitted to the 2020 IEEE S&P conference.\r\n                </Paragraph>\r\n            </>\r\n        },\r\n        {\r\n            title: \"Orientation Leader (Spring 2018-Summer 2019)\", body: <>\r\n                <Paragraph>The University of Texas at Dallas, Richardson, TX</Paragraph>\r\n                <Paragraph>\r\n                    Lead tours, small groups, and academic advising. Handled confidential student records. CPR, LGBT+,\r\n                    Title IX, multicultural, and disability trained. Abundant interpersonal communication, leadership,\r\n                    and teamwork. Acted as Campus Security Authority (CSA). As a returner, mentored new OLs.\r\n                    <b> Awarded Returning Orientation Leader of the Year.</b>\r\n                </Paragraph></>\r\n        }\r\n    ]} />\r\n    {/* <Paragraph>Extracurriculars</Paragraph>\r\n    <List items={[\r\n        \"Freshman Mentor, Freshman Mentor Program (Fall 2018-Spring 2021)\",\r\n        \"Cellist, Musica Nova (Spring 2019-Fall 2020)\",\r\n        \"Webmaster, Engineer in Residence [EiR] (Spring 2018-Spring 2020)\",\r\n    ]}\r\n    /> */}\r\n</PanelContent>;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport styled from \"styled-components\";\r\nimport {HelixDisplay} from \"./components/HelixDisplay\";\r\nimport {\r\n  AboutMePanel,\r\n  CourseworkPanel,\r\n  EducationPanel,\r\n  FrameworksPanel,\r\n  LanguagesPanel,\r\n  MiscSkillsPanel, ProjectsPanel,\r\n  StartPanel, WorkPanel\r\n} from \"./content/panels\";\r\n\r\nconst App: React.FC = () => {\r\n  return <HelixDisplay>\r\n    <StartPanel/>\r\n    <AboutMePanel/>\r\n    <WorkPanel/>\r\n    <EducationPanel/>\r\n    <CourseworkPanel/>\r\n    <LanguagesPanel/>\r\n    <FrameworksPanel/>\r\n    <MiscSkillsPanel/>\r\n    <ProjectsPanel/>\r\n  </HelixDisplay>\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}